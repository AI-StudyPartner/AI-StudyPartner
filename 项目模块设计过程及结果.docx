# AI学习搭子项目模块设计过程及结果

## 1. 项目概述

AI学习搭子是一个面向高校学生的个性化智能学习伙伴Web应用原型。项目采用前后端分离架构，前端使用Vue 3 + TypeScript + Ant Design Vue，后端使用Spring Boot + MyBatis。

## 2. 前端模块设计

### 2.1 技术架构
- **核心框架**: Vue 3 (Composition API)
- **开发构建工具**: Vite
- **路由管理**: Vue Router
- **状态管理**: Pinia
- **UI组件库**: Ant Design Vue
- **语言**: TypeScript
- **HTTP客户端**: axios

### 2.2 核心模块

#### 2.2.1 登录/注册模块 (Auth.vue)
- **功能**: 用户账号密码登录与注册
- **设计过程**:
  - 使用Ant Design Vue的Tabs组件实现登录/注册切换
  - 通过axios与后端API交互验证用户凭证
  - 注册成功后自动登录并跳转至主界面
- **结果**: 实现了基本的用户认证功能

#### 2.2.2 主应用布局 (AppLayout.vue)
- **功能**: 应用整体布局，包含侧边栏菜单和顶部导航
- **设计过程**:
  - 使用Ant Design Vue的Layout组件构建页面布局
  - 侧边栏使用Menu组件实现导航菜单
  - 顶部导航显示面包屑和用户信息
- **结果**: 提供了清晰的应用导航结构

#### 2.2.3 聊天答疑模块 (ChatView.vue)
- **功能**: 核心AI聊天界面，支持历史记录、消息气泡、AI"正在输入"状态模拟
- **设计过程**:
  - 实现对话列表和消息列表的展示
  - 支持文件/图片附件上传和预览
  - 通过Fetch API实现与后端AI服务的流式通信
  - 使用localStorage存储用户信息
- **结果**: 实现了完整的聊天交互体验

#### 2.2.4 番茄钟与目标模块 (FocusView.vue)
- **功能**: 可配置的番茄钟计时器、目标管理、专注统计
- **设计过程**:
  - 使用Vue的响应式特性实现计时器逻辑
  - 支持多种计时器样式（环形、数字时钟）和全屏模式
  - 通过折线图和饼图展示学习统计数据
  - 实现短期和长期目标的增删改查
- **结果**: 提供了有效的学习时间管理和目标跟踪功能

#### 2.2.5 学业模块 (StudyView.vue)
- **功能**: 课表/考试安排上传、近期考试管理
- **设计过程**:
  - 实现文件上传功能，支持课表和考试安排文件上传
  - 提供近期考试列表展示和自定义添加功能
  - 与后端API交互实现考试信息的增删查改
- **结果**: 帮助用户管理学业相关信息

#### 2.2.6 就业模块 (WorkView.vue)
- **功能**: 简历上传、理想岗位设定、就业准备建议
- **设计过程**:
  - 实现简历文件上传和本地存储功能
  - 提供理想岗位输入和就业准备建议展示
- **结果**: 为用户提供就业相关功能支持

#### 2.2.7 用户设置模块 (UserSettingsView.vue)
- **功能**: 用户个人信息和AI偏好设置
- **设计过程**:
  - 提供文本域供用户输入详细的个人背景和偏好
  - 实现学习作息偏好设置（时段、专注时间、可用日期）
  - 支持AI回复偏好设置（语气、长度、表情符号、参考来源）
- **结果**: 实现了个性化的用户配置功能

## 3. 后端模块设计

### 3.1 技术架构
- **核心框架**: Spring Boot
- **持久层框架**: MyBatis
- **数据库**: MySQL
- **AI服务**: 阿里云百炼平台

### 3.2 核心模块

#### 3.2.1 用户管理模块
- **功能**: 用户登录、注册
- **设计过程**:
  - UserController处理用户登录和注册请求
  - UserMapper实现用户数据的数据库操作
  - User实体类映射用户表结构
- **结果**: 实现了基本的用户管理功能

#### 3.2.2 对话管理模块
- **功能**: 对话和消息的增删查改
- **设计过程**:
  - ConversationController处理对话相关请求
  - ChatMessageController处理消息相关请求
  - ConversationMapper和ChatMessageMapper实现数据库操作
  - Conversation和ChatMessage实体类映射表结构
- **结果**: 实现了对话历史的持久化管理

#### 3.2.3 AI聊天模块
- **功能**: 与AI模型交互，提供智能问答服务
- **设计过程**:
  - ChatAIController和ChatController实现AI聊天接口
  - 集成阿里云百炼平台的API
  - 支持流式响应以实现实时打字效果
- **结果**: 实现了与AI模型的交互功能

#### 3.2.4 专注力管理模块
- **功能**: 目标管理（短期/长期）、完成状态更新
- **设计过程**:
  - FocusController处理目标相关请求
  - FocusMapper实现目标数据的数据库操作
  - Goal实体类映射目标表结构
- **结果**: 实现了学习目标的管理功能

#### 3.2.5 用户设置模块
- **功能**: 用户个性化设置的保存和读取
- **设计过程**:
  - SetController处理设置相关请求
  - SetMapper实现设置数据的数据库操作
  - Set实体类映射设置表结构
  - WeeklyAvailableDaysTypeHandler处理列表类型数据的转换
- **结果**: 实现了用户个性化配置的持久化

#### 3.2.6 考试管理模块
- **功能**: 考试信息的增删查改
- **设计过程**:
  - ExamController处理考试相关请求
  - ExamMapper实现考试数据的数据库操作
  - Exam实体类映射考试表结构
- **结果**: 实现了考试信息的管理功能

## 4. 数据库设计

项目使用MySQL数据库，主要数据表包括：
- 用户表 (t_user)
- 对话表 (t_conversation)
- 消息表 (t_chat_message)
- 目标表 (t_goal)
- 设置表 (t_setting)
- 考试表 (t_exam)

## 5. 总结

AI学习搭子项目通过前后端分离的架构，实现了用户认证、智能聊天、学习时间管理、学业和就业支持等核心功能。前端采用Vue 3和Ant Design Vue实现了响应式用户界面，后端基于Spring Boot和MyBatis提供了稳定的数据处理和AI服务集成能力。